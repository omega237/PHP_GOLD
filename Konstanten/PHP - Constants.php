<?php
/***************************************************************
* Diese Datei wurde automatisch generiert, nicht modifizieren  *
***************************************************************/
define("Symbol_Eof", 0);
define("Symbol_Error", 1);
define("Symbol_Whitespace", 2);
define("Symbol_Minus", 3);
define("Symbol_Exclam", 4);
define("Symbol_Dollar", 5);
define("Symbol_Percent", 6);
define("Symbol_Amp", 7);
define("Symbol_Lparan", 8);
define("Symbol_Rparan", 9);
define("Symbol_Times", 10);
define("Symbol_Comma", 11);
define("Symbol_Dot", 12);
define("Symbol_Div", 13);
define("Symbol_Colon", 14);
define("Symbol_Semi", 15);
define("Symbol_Question", 16);
define("Symbol_At", 17);
define("Symbol_Lbracket", 18);
define("Symbol_Rbracket", 19);
define("Symbol_Caret", 20);
define("Symbol_Accent", 21);
define("Symbol_Lbrace", 22);
define("Symbol_Pipe", 23);
define("Symbol_Rbrace", 24);
define("Symbol_Tilde", 25);
define("Symbol_Plus", 26);
define("Symbol_Lt", 27);
define("Symbol_Eq", 28);
define("Symbol_Gt", 29);
define("Symbol_Newline", 30);
define("Symbol_T_abstract", 31);
define("Symbol_T_and_equal", 32);
define("Symbol_T_array", 33);
define("Symbol_T_array_cast", 34);
define("Symbol_T_as", 35);
define("Symbol_T_bool_cast", 36);
define("Symbol_T_boolean_and", 37);
define("Symbol_T_boolean_or", 38);
define("Symbol_T_break", 39);
define("Symbol_T_case", 40);
define("Symbol_T_catch", 41);
define("Symbol_T_class", 42);
define("Symbol_T_class_c", 43);
define("Symbol_T_clone", 44);
define("Symbol_T_close_tag", 45);
define("Symbol_T_comment", 46);
define("Symbol_T_concat_equal", 47);
define("Symbol_T_const", 48);
define("Symbol_T_constant_encapsed_string", 49);
define("Symbol_T_continue", 50);
define("Symbol_T_curly_open", 51);
define("Symbol_T_dec", 52);
define("Symbol_T_declare", 53);
define("Symbol_T_default", 54);
define("Symbol_T_div_equal", 55);
define("Symbol_T_dnumber", 56);
define("Symbol_T_do", 57);
define("Symbol_T_doc_comment", 58);
define("Symbol_T_dollar_open_curly_braces", 59);
define("Symbol_T_double_arrow", 60);
define("Symbol_T_double_cast", 61);
define("Symbol_T_echo", 62);
define("Symbol_T_else", 63);
define("Symbol_T_elseif", 64);
define("Symbol_T_empty", 65);
define("Symbol_T_encapsed_and_whitespace", 66);
define("Symbol_T_end_heredoc", 67);
define("Symbol_T_enddeclare", 68);
define("Symbol_T_endfor", 69);
define("Symbol_T_endforeach", 70);
define("Symbol_T_endif", 71);
define("Symbol_T_endswitch", 72);
define("Symbol_T_endwhile", 73);
define("Symbol_T_eval", 74);
define("Symbol_T_exit", 75);
define("Symbol_T_extends", 76);
define("Symbol_T_file", 77);
define("Symbol_T_final", 78);
define("Symbol_T_for", 79);
define("Symbol_T_foreach", 80);
define("Symbol_T_func_c", 81);
define("Symbol_T_function", 82);
define("Symbol_T_global", 83);
define("Symbol_T_halt_compiler", 84);
define("Symbol_T_if", 85);
define("Symbol_T_implements", 86);
define("Symbol_T_inc", 87);
define("Symbol_T_include", 88);
define("Symbol_T_include_once", 89);
define("Symbol_T_inline_html", 90);
define("Symbol_T_instanceof", 91);
define("Symbol_T_int_cast", 92);
define("Symbol_T_interface", 93);
define("Symbol_T_is_equal", 94);
define("Symbol_T_is_greater_or_equal", 95);
define("Symbol_T_is_identical", 96);
define("Symbol_T_is_not_equal", 97);
define("Symbol_T_is_not_identical", 98);
define("Symbol_T_is_smaller_or_equal", 99);
define("Symbol_T_isset", 100);
define("Symbol_T_line", 101);
define("Symbol_T_list", 102);
define("Symbol_T_lnumber", 103);
define("Symbol_T_logical_and", 104);
define("Symbol_T_logical_or", 105);
define("Symbol_T_logical_xor", 106);
define("Symbol_T_method_c", 107);
define("Symbol_T_minus_equal", 108);
define("Symbol_T_mod_equal", 109);
define("Symbol_T_mul_equal", 110);
define("Symbol_T_new", 111);
define("Symbol_T_num_string", 112);
define("Symbol_T_object_cast", 113);
define("Symbol_T_object_operator", 114);
define("Symbol_T_open_tag", 115);
define("Symbol_T_open_tag_with_echo", 116);
define("Symbol_T_or_equal", 117);
define("Symbol_T_paamayim_nekudotayim", 118);
define("Symbol_T_plus_equal", 119);
define("Symbol_T_print", 120);
define("Symbol_T_private", 121);
define("Symbol_T_protected", 122);
define("Symbol_T_public", 123);
define("Symbol_T_require", 124);
define("Symbol_T_require_once", 125);
define("Symbol_T_return", 126);
define("Symbol_T_sl", 127);
define("Symbol_T_sl_equal", 128);
define("Symbol_T_sr", 129);
define("Symbol_T_sr_equal", 130);
define("Symbol_T_start_heredoc", 131);
define("Symbol_T_static", 132);
define("Symbol_T_string", 133);
define("Symbol_T_string_cast", 134);
define("Symbol_T_string_varname", 135);
define("Symbol_T_switch", 136);
define("Symbol_T_throw", 137);
define("Symbol_T_try", 138);
define("Symbol_T_unset", 139);
define("Symbol_T_unset_cast", 140);
define("Symbol_T_use", 141);
define("Symbol_T_var", 142);
define("Symbol_T_variable", 143);
define("Symbol_T_while", 144);
define("Symbol_T_whitespace", 145);
define("Symbol_T_xor_equal", 146);
define("Symbol_Additional_catch", 147);
define("Symbol_Additional_catches", 148);
define("Symbol_Array_pair_list", 149);
define("Symbol_Assignment_list", 150);
define("Symbol_Assignment_list_2", 151);
define("Symbol_Assignment_list_element", 152);
define("Symbol_Base_variable", 153);
define("Symbol_Base_variable_with_function_calls", 154);
define("Symbol_Case_list", 155);
define("Symbol_Case_separator", 156);
define("Symbol_Class_constant", 157);
define("Symbol_Class_constant_declaration", 158);
define("Symbol_Class_constant_declaration_2", 159);
define("Symbol_Class_declaration_statement", 160);
define("Symbol_Class_entry_type", 161);
define("Symbol_Class_name_reference", 162);
define("Symbol_Class_statement", 163);
define("Symbol_Class_statement_list", 164);
define("Symbol_Class_variable_declaration", 165);
define("Symbol_Class_variable_declaration_2", 166);
define("Symbol_Class_variable_declaration_3", 167);
define("Symbol_Common_scalar", 168);
define("Symbol_Compound_variable", 169);
define("Symbol_Ctor_arguments", 170);
define("Symbol_Declare_list", 171);
define("Symbol_Declare_list_2", 172);
define("Symbol_Declare_statement", 173);
define("Symbol_Dim_offset", 174);
define("Symbol_Dynamic_class_name_reference", 175);
define("Symbol_Dynamic_class_name_variable_properties", 176);
define("Symbol_Dynamic_class_name_variable_property", 177);
define("Symbol_Echo_expr_list", 178);
define("Symbol_Echo_expr_list_2", 179);
define("Symbol_Else_single", 180);
define("Symbol_Elseif_list", 181);
define("Symbol_Elseif_list_2", 182);
define("Symbol_Encaps_list", 183);
define("Symbol_Encaps_var", 184);
define("Symbol_Encaps_var_offset", 185);
define("Symbol_Exit_expr", 186);
define("Symbol_Expr", 187);
define("Symbol_Expr_without_variable", 188);
define("Symbol_Expr_without_variable_2", 189);
define("Symbol_Extends_from", 190);
define("Symbol_For_expr", 191);
define("Symbol_For_statement", 192);
define("Symbol_Foreach_optional_arg", 193);
define("Symbol_Foreach_statement", 194);
define("Symbol_Foreach_variable", 195);
define("Symbol_Fully_qualified_class_name", 196);
define("Symbol_Function_call", 197);
define("Symbol_Function_call_parameter_list", 198);
define("Symbol_Function_declaration_statement", 199);
define("Symbol_Global_var", 200);
define("Symbol_Global_var_list", 201);
define("Symbol_Global_var_list_2", 202);
define("Symbol_Implements_list", 203);
define("Symbol_Inner_statement", 204);
define("Symbol_Inner_statement_list", 205);
define("Symbol_Interface_entry", 206);
define("Symbol_Interface_extends_list", 207);
define("Symbol_Interface_list", 208);
define("Symbol_Interface_list_2", 209);
define("Symbol_Internal_functions_in_yacc", 210);
define("Symbol_Is_reference", 211);
define("Symbol_Isset_variables", 212);
define("Symbol_Isset_variables_2", 213);
define("Symbol_Member_modifier", 214);
define("Symbol_Method_body", 215);
define("Symbol_Method_modifiers", 216);
define("Symbol_Method_or_not", 217);
define("Symbol_New_else_single", 218);
define("Symbol_New_elseif_list", 219);
define("Symbol_New_elseif_list_2", 220);
define("Symbol_Non_empty_additional_catches", 221);
define("Symbol_Non_empty_array_pair_list", 222);
define("Symbol_Non_empty_array_pair_list_2", 223);
define("Symbol_Non_empty_array_pair_list_3", 224);
define("Symbol_Non_empty_for_expr", 225);
define("Symbol_Non_empty_for_expr_2", 226);
define("Symbol_Non_empty_function_call_parameter_list", 227);
define("Symbol_Non_empty_function_call_parameter_list_2", 228);
define("Symbol_Non_empty_function_call_parameter_list_3", 229);
define("Symbol_Non_empty_member_modifiers", 230);
define("Symbol_Non_empty_parameter_list", 231);
define("Symbol_Non_empty_parameter_list_2", 232);
define("Symbol_Non_empty_parameter_list_3", 233);
define("Symbol_Non_empty_parameter_list_4", 234);
define("Symbol_Non_empty_static_array_pair_list", 235);
define("Symbol_Non_empty_static_array_pair_list_2", 236);
define("Symbol_Object_dim_list", 237);
define("Symbol_Object_dim_list_2", 238);
define("Symbol_Object_property", 239);
define("Symbol_Offsets", 240);
define("Symbol_Optional_class_type", 241);
define("Symbol_Parameter_list", 242);
define("Symbol_Possible_comma", 243);
define("Symbol_Reference_variable", 244);
define("Symbol_Reference_variable_2", 245);
define("Symbol_Scalar", 246);
define("Symbol_Simple_indirect_reference", 247);
define("Symbol_Start", 248);
define("Symbol_Statement", 249);
define("Symbol_Static_array_pair_list", 250);
define("Symbol_Static_class_constant", 251);
define("Symbol_Static_member", 252);
define("Symbol_Static_scalar", 253);
define("Symbol_Static_scalar_2", 254);
define("Symbol_Static_var_list", 255);
define("Symbol_Static_var_list_2", 256);
define("Symbol_Static_var_list_3", 257);
define("Symbol_Switch_case_list", 258);
define("Symbol_Top_statement", 259);
define("Symbol_Top_statement_list", 260);
define("Symbol_Unset_variable", 261);
define("Symbol_Unset_variables", 262);
define("Symbol_Unset_variables_2", 263);
define("Symbol_Unticked_class_declaration_statement", 264);
define("Symbol_Unticked_function_declaration_statement", 265);
define("Symbol_Unticked_statement", 266);
define("Symbol_Use_filename", 267);
define("Symbol_Variable", 268);
define("Symbol_Variable_modifiers", 269);
define("Symbol_Variable_name", 270);
define("Symbol_Variable_properties", 271);
define("Symbol_Variable_property", 272);
define("Symbol_Variable_without_objects", 273);
define("Symbol_While_statement", 274);
define("Rule_Start", 0);
define("Rule_Top_statement_list", 1);
define("Rule_Top_statement_list2", 2);
define("Rule_Top_statement", 3);
define("Rule_Top_statement2", 4);
define("Rule_Top_statement3", 5);
define("Rule_Top_statement_T_halt_compiler_Lparan_Rparan_Semi", 6);
define("Rule_Inner_statement_list", 7);
define("Rule_Inner_statement_list2", 8);
define("Rule_Inner_statement", 9);
define("Rule_Inner_statement2", 10);
define("Rule_Inner_statement3", 11);
define("Rule_Inner_statement_T_halt_compiler_Lparan_Rparan_Semi", 12);
define("Rule_Statement", 13);
define("Rule_Unticked_statement_Lbrace_Rbrace", 14);
define("Rule_Unticked_statement_T_if_Lparan_Rparan", 15);
define("Rule_Unticked_statement_T_if_Lparan_Rparan_Colon_T_endif_Semi", 16);
define("Rule_Unticked_statement_T_while_Lparan_Rparan", 17);
define("Rule_Unticked_statement_T_do_T_while_Lparan_Rparan_Semi", 18);
define("Rule_Unticked_statement_T_for_Lparan_Semi_Semi_Rparan", 19);
define("Rule_Unticked_statement_T_switch_Lparan_Rparan", 20);
define("Rule_Unticked_statement_T_break_Semi", 21);
define("Rule_Unticked_statement_T_break_Semi2", 22);
define("Rule_Unticked_statement_T_continue_Semi", 23);
define("Rule_Unticked_statement_T_continue_Semi2", 24);
define("Rule_Unticked_statement_T_return_Semi", 25);
define("Rule_Unticked_statement_T_return_Semi2", 26);
define("Rule_Unticked_statement_T_return_Semi3", 27);
define("Rule_Unticked_statement_T_global_Semi", 28);
define("Rule_Unticked_statement_T_static_Semi", 29);
define("Rule_Unticked_statement_T_echo_Semi", 30);
define("Rule_Unticked_statement_T_inline_html", 31);
define("Rule_Unticked_statement_Semi", 32);
define("Rule_Unticked_statement_T_use_Semi", 33);
define("Rule_Unticked_statement_T_unset_Lparan_Rparan_Semi", 34);
define("Rule_Unticked_statement_T_foreach_Lparan_T_as_Rparan", 35);
define("Rule_Unticked_statement_T_foreach_Lparan_T_as_Rparan2", 36);
define("Rule_Unticked_statement_T_declare_Lparan_Rparan", 37);
define("Rule_Unticked_statement_Semi2", 38);
define("Rule_Unticked_statement_T_try_Lbrace_Rbrace_T_catch_Lparan_T_variable_Rparan_Lbrace_Rbrace", 39);
define("Rule_Unticked_statement_T_throw_Semi", 40);
define("Rule_Additional_catches", 41);
define("Rule_Additional_catches2", 42);
define("Rule_Non_empty_additional_catches", 43);
define("Rule_Non_empty_additional_catches2", 44);
define("Rule_Additional_catch_T_catch_Lparan_T_variable_Rparan_Lbrace_Rbrace", 45);
define("Rule_Unset_variables_Comma", 46);
define("Rule_Unset_variables", 47);
define("Rule_Unset_variables_2", 48);
define("Rule_Unset_variable", 49);
define("Rule_Use_filename_T_constant_encapsed_string", 50);
define("Rule_Use_filename_Lparan_T_constant_encapsed_string_Rparan", 51);
define("Rule_Function_declaration_statement", 52);
define("Rule_Class_declaration_statement", 53);
define("Rule_Is_reference", 54);
define("Rule_Is_reference_Amp", 55);
define("Rule_Unticked_function_declaration_statement_T_function_T_string_Lparan_Rparan_Lbrace_Rbrace", 56);
define("Rule_Unticked_class_declaration_statement_T_string_Lbrace_Rbrace", 57);
define("Rule_Unticked_class_declaration_statement_T_string_Lbrace_Rbrace2", 58);
define("Rule_Class_entry_type_T_class", 59);
define("Rule_Class_entry_type_T_abstract_T_class", 60);
define("Rule_Class_entry_type_T_final_T_class", 61);
define("Rule_Extends_from", 62);
define("Rule_Extends_from_T_extends", 63);
define("Rule_Interface_entry_T_interface", 64);
define("Rule_Interface_extends_list", 65);
define("Rule_Interface_extends_list_T_extends", 66);
define("Rule_Implements_list", 67);
define("Rule_Implements_list_T_implements", 68);
define("Rule_Interface_list_Comma", 69);
define("Rule_Interface_list", 70);
define("Rule_Interface_list_2", 71);
define("Rule_Foreach_optional_arg", 72);
define("Rule_Foreach_optional_arg_T_double_arrow", 73);
define("Rule_Foreach_variable", 74);
define("Rule_Foreach_variable_Amp", 75);
define("Rule_For_statement", 76);
define("Rule_For_statement_Colon_T_endfor_Semi", 77);
define("Rule_Foreach_statement", 78);
define("Rule_Foreach_statement_Colon_T_endforeach_Semi", 79);
define("Rule_Declare_statement", 80);
define("Rule_Declare_statement_Colon_T_enddeclare_Semi", 81);
define("Rule_Declare_list_Comma_T_string_Eq", 82);
define("Rule_Declare_list", 83);
define("Rule_Declare_list_2_T_string_Eq", 84);
define("Rule_Switch_case_list_Lbrace_Rbrace", 85);
define("Rule_Switch_case_list_Lbrace_Semi_Rbrace", 86);
define("Rule_Switch_case_list_Colon_T_endswitch_Semi", 87);
define("Rule_Switch_case_list_Colon_Semi_T_endswitch_Semi", 88);
define("Rule_Case_list", 89);
define("Rule_Case_list_T_case", 90);
define("Rule_Case_list_T_default", 91);
define("Rule_Case_separator_Colon", 92);
define("Rule_Case_separator_Semi", 93);
define("Rule_While_statement", 94);
define("Rule_While_statement_Colon_T_endwhile_Semi", 95);
define("Rule_Elseif_list_T_elseif_Lparan_Rparan", 96);
define("Rule_Elseif_list", 97);
define("Rule_Elseif_list_2", 98);
define("Rule_New_elseif_list_T_elseif_Lparan_Rparan_Colon", 99);
define("Rule_New_elseif_list", 100);
define("Rule_New_elseif_list_2", 101);
define("Rule_Else_single", 102);
define("Rule_Else_single_T_else", 103);
define("Rule_New_else_single", 104);
define("Rule_New_else_single_T_else_Colon", 105);
define("Rule_Parameter_list", 106);
define("Rule_Parameter_list2", 107);
define("Rule_Non_empty_parameter_list_Comma_T_variable", 108);
define("Rule_Non_empty_parameter_list", 109);
define("Rule_Non_empty_parameter_list_2_Comma_T_variable_Eq", 110);
define("Rule_Non_empty_parameter_list_2", 111);
define("Rule_Non_empty_parameter_list_3_Comma_T_variable", 112);
define("Rule_Non_empty_parameter_list_3_Comma_T_variable_Eq", 113);
define("Rule_Non_empty_parameter_list_3_Comma_Amp_T_variable", 114);
define("Rule_Non_empty_parameter_list_3_Comma_Amp_T_variable_Eq", 115);
define("Rule_Non_empty_parameter_list_3", 116);
define("Rule_Non_empty_parameter_list_4_T_variable", 117);
define("Rule_Non_empty_parameter_list_4_Amp_T_variable", 118);
define("Rule_Non_empty_parameter_list_4_Amp_T_variable_Eq", 119);
define("Rule_Non_empty_parameter_list_4_T_variable_Eq", 120);
define("Rule_Optional_class_type", 121);
define("Rule_Optional_class_type_T_string", 122);
define("Rule_Optional_class_type_T_array", 123);
define("Rule_Function_call_parameter_list", 124);
define("Rule_Function_call_parameter_list2", 125);
define("Rule_Non_empty_function_call_parameter_list_Comma", 126);
define("Rule_Non_empty_function_call_parameter_list_Comma2", 127);
define("Rule_Non_empty_function_call_parameter_list", 128);
define("Rule_Non_empty_function_call_parameter_list_2_Comma_Amp", 129);
define("Rule_Non_empty_function_call_parameter_list_2", 130);
define("Rule_Non_empty_function_call_parameter_list_3_Comma", 131);
define("Rule_Non_empty_function_call_parameter_list_3_Comma2", 132);
define("Rule_Non_empty_function_call_parameter_list_3", 133);
define("Rule_Global_var_list_Comma", 134);
define("Rule_Global_var_list", 135);
define("Rule_Global_var_list_2", 136);
define("Rule_Global_var_T_variable", 137);
define("Rule_Global_var_Dollar", 138);
define("Rule_Global_var_Dollar_Lbrace_Rbrace", 139);
define("Rule_Static_var_list_Comma_T_variable", 140);
define("Rule_Static_var_list", 141);
define("Rule_Static_var_list_2_Comma_T_variable_Eq", 142);
define("Rule_Static_var_list_2", 143);
define("Rule_Static_var_list_3_T_variable", 144);
define("Rule_Static_var_list_3_T_variable_Eq", 145);
define("Rule_Class_statement_list", 146);
define("Rule_Class_statement_list2", 147);
define("Rule_Class_statement_Semi", 148);
define("Rule_Class_statement_Semi2", 149);
define("Rule_Class_statement_T_function_T_string_Lparan_Rparan", 150);
define("Rule_Method_body_Semi", 151);
define("Rule_Method_body_Lbrace_Rbrace", 152);
define("Rule_Variable_modifiers", 153);
define("Rule_Variable_modifiers_T_var", 154);
define("Rule_Method_modifiers", 155);
define("Rule_Method_modifiers2", 156);
define("Rule_Non_empty_member_modifiers", 157);
define("Rule_Non_empty_member_modifiers2", 158);
define("Rule_Member_modifier_T_public", 159);
define("Rule_Member_modifier_T_protected", 160);
define("Rule_Member_modifier_T_private", 161);
define("Rule_Member_modifier_T_static", 162);
define("Rule_Member_modifier_T_abstract", 163);
define("Rule_Member_modifier_T_final", 164);
define("Rule_Class_variable_declaration_Comma_T_variable", 165);
define("Rule_Class_variable_declaration", 166);
define("Rule_Class_variable_declaration_2_Comma_T_variable_Eq", 167);
define("Rule_Class_variable_declaration_2", 168);
define("Rule_Class_variable_declaration_3_T_variable", 169);
define("Rule_Class_variable_declaration_3_T_variable_Eq", 170);
define("Rule_Class_constant_declaration_Comma_T_string_Eq", 171);
define("Rule_Class_constant_declaration", 172);
define("Rule_Class_constant_declaration_2_T_const_T_string_Eq", 173);
define("Rule_Echo_expr_list_Comma", 174);
define("Rule_Echo_expr_list", 175);
define("Rule_Echo_expr_list_2", 176);
define("Rule_For_expr", 177);
define("Rule_For_expr2", 178);
define("Rule_Non_empty_for_expr_Comma", 179);
define("Rule_Non_empty_for_expr", 180);
define("Rule_Non_empty_for_expr_2", 181);
define("Rule_Expr_without_variable_Plus", 182);
define("Rule_Expr_without_variable_Minus", 183);
define("Rule_Expr_without_variable", 184);
define("Rule_Expr_without_variable_2_T_list_Lparan_Rparan_Eq", 185);
define("Rule_Expr_without_variable_2_Eq", 186);
define("Rule_Expr_without_variable_2_Eq_Amp", 187);
define("Rule_Expr_without_variable_2_Eq_Amp_T_new", 188);
define("Rule_Expr_without_variable_2_T_new", 189);
define("Rule_Expr_without_variable_2_T_clone", 190);
define("Rule_Expr_without_variable_2_T_plus_equal", 191);
define("Rule_Expr_without_variable_2_T_minus_equal", 192);
define("Rule_Expr_without_variable_2_T_mul_equal", 193);
define("Rule_Expr_without_variable_2_T_div_equal", 194);
define("Rule_Expr_without_variable_2_T_concat_equal", 195);
define("Rule_Expr_without_variable_2_T_mod_equal", 196);
define("Rule_Expr_without_variable_2_T_and_equal", 197);
define("Rule_Expr_without_variable_2_T_or_equal", 198);
define("Rule_Expr_without_variable_2_T_xor_equal", 199);
define("Rule_Expr_without_variable_2_T_sl_equal", 200);
define("Rule_Expr_without_variable_2_T_sr_equal", 201);
define("Rule_Expr_without_variable_2_T_inc", 202);
define("Rule_Expr_without_variable_2_T_inc2", 203);
define("Rule_Expr_without_variable_2_T_dec", 204);
define("Rule_Expr_without_variable_2_T_dec2", 205);
define("Rule_Expr_without_variable_2_T_boolean_or", 206);
define("Rule_Expr_without_variable_2_T_boolean_and", 207);
define("Rule_Expr_without_variable_2_T_logical_or", 208);
define("Rule_Expr_without_variable_2_T_logical_and", 209);
define("Rule_Expr_without_variable_2_T_logical_xor", 210);
define("Rule_Expr_without_variable_2_Pipe", 211);
define("Rule_Expr_without_variable_2_Amp", 212);
define("Rule_Expr_without_variable_2_Caret", 213);
define("Rule_Expr_without_variable_2_Dot", 214);
define("Rule_Expr_without_variable_2_Plus", 215);
define("Rule_Expr_without_variable_2_Minus", 216);
define("Rule_Expr_without_variable_2_Times", 217);
define("Rule_Expr_without_variable_2_Div", 218);
define("Rule_Expr_without_variable_2_Percent", 219);
define("Rule_Expr_without_variable_2_T_sl", 220);
define("Rule_Expr_without_variable_2_T_sr", 221);
define("Rule_Expr_without_variable_2_Exclam", 222);
define("Rule_Expr_without_variable_2_Tilde", 223);
define("Rule_Expr_without_variable_2_T_is_identical", 224);
define("Rule_Expr_without_variable_2_T_is_not_identical", 225);
define("Rule_Expr_without_variable_2_T_is_equal", 226);
define("Rule_Expr_without_variable_2_T_is_not_equal", 227);
define("Rule_Expr_without_variable_2_Lt", 228);
define("Rule_Expr_without_variable_2_T_is_smaller_or_equal", 229);
define("Rule_Expr_without_variable_2_Gt", 230);
define("Rule_Expr_without_variable_2_T_is_greater_or_equal", 231);
define("Rule_Expr_without_variable_2_T_instanceof", 232);
define("Rule_Expr_without_variable_2_Lparan_Rparan", 233);
define("Rule_Expr_without_variable_2_Question_Colon", 234);
define("Rule_Expr_without_variable_2", 235);
define("Rule_Expr_without_variable_2_T_int_cast", 236);
define("Rule_Expr_without_variable_2_T_double_cast", 237);
define("Rule_Expr_without_variable_2_T_string_cast", 238);
define("Rule_Expr_without_variable_2_T_array_cast", 239);
define("Rule_Expr_without_variable_2_T_object_cast", 240);
define("Rule_Expr_without_variable_2_T_bool_cast", 241);
define("Rule_Expr_without_variable_2_T_unset_cast", 242);
define("Rule_Expr_without_variable_2_T_exit", 243);
define("Rule_Expr_without_variable_2_At", 244);
define("Rule_Expr_without_variable_22", 245);
define("Rule_Expr_without_variable_2_T_array_Lparan_Rparan", 246);
define("Rule_Expr_without_variable_2_Accent_Accent", 247);
define("Rule_Expr_without_variable_2_T_print", 248);
define("Rule_Function_call_T_string_Lparan_Rparan", 249);
define("Rule_Function_call_T_paamayim_nekudotayim_T_string_Lparan_Rparan", 250);
define("Rule_Function_call_T_paamayim_nekudotayim_Lparan_Rparan", 251);
define("Rule_Function_call_Lparan_Rparan", 252);
define("Rule_Fully_qualified_class_name_T_string", 253);
define("Rule_Class_name_reference_T_string", 254);
define("Rule_Class_name_reference", 255);
define("Rule_Dynamic_class_name_reference_T_object_operator", 256);
define("Rule_Dynamic_class_name_reference", 257);
define("Rule_Dynamic_class_name_variable_properties", 258);
define("Rule_Dynamic_class_name_variable_properties2", 259);
define("Rule_Dynamic_class_name_variable_property_T_object_operator", 260);
define("Rule_Exit_expr", 261);
define("Rule_Exit_expr_Lparan_Rparan", 262);
define("Rule_Exit_expr_Lparan_Rparan2", 263);
define("Rule_Ctor_arguments", 264);
define("Rule_Ctor_arguments_Lparan_Rparan", 265);
define("Rule_Common_scalar_T_lnumber", 266);
define("Rule_Common_scalar_T_dnumber", 267);
define("Rule_Common_scalar_T_constant_encapsed_string", 268);
define("Rule_Common_scalar_T_line", 269);
define("Rule_Common_scalar_T_file", 270);
define("Rule_Common_scalar_T_class_c", 271);
define("Rule_Common_scalar_T_method_c", 272);
define("Rule_Common_scalar_T_func_c", 273);
define("Rule_Static_scalar_Plus", 274);
define("Rule_Static_scalar_Minus", 275);
define("Rule_Static_scalar", 276);
define("Rule_Static_scalar_2", 277);
define("Rule_Static_scalar_2_T_string", 278);
define("Rule_Static_scalar_2_T_array_Lparan_Rparan", 279);
define("Rule_Static_scalar_22", 280);
define("Rule_Static_class_constant_T_string_T_paamayim_nekudotayim_T_string", 281);
define("Rule_Scalar_T_string", 282);
define("Rule_Scalar_T_string_varname", 283);
define("Rule_Scalar", 284);
define("Rule_Scalar2", 285);
define("Rule_Scalar_T_start_heredoc_T_end_heredoc", 286);
define("Rule_Static_array_pair_list", 287);
define("Rule_Static_array_pair_list2", 288);
define("Rule_Possible_comma", 289);
define("Rule_Possible_comma_Comma", 290);
define("Rule_Non_empty_static_array_pair_list_Comma_T_double_arrow", 291);
define("Rule_Non_empty_static_array_pair_list_Comma", 292);
define("Rule_Non_empty_static_array_pair_list", 293);
define("Rule_Non_empty_static_array_pair_list_2_T_double_arrow", 294);
define("Rule_Non_empty_static_array_pair_list_2", 295);
define("Rule_Expr", 296);
define("Rule_Expr2", 297);
define("Rule_Variable_T_object_operator", 298);
define("Rule_Variable", 299);
define("Rule_Variable_properties", 300);
define("Rule_Variable_properties2", 301);
define("Rule_Variable_property_T_object_operator", 302);
define("Rule_Method_or_not_Lparan_Rparan", 303);
define("Rule_Method_or_not", 304);
define("Rule_Variable_without_objects", 305);
define("Rule_Variable_without_objects2", 306);
define("Rule_Static_member_T_paamayim_nekudotayim", 307);
define("Rule_Base_variable_with_function_calls", 308);
define("Rule_Base_variable_with_function_calls2", 309);
define("Rule_Base_variable", 310);
define("Rule_Base_variable2", 311);
define("Rule_Base_variable3", 312);
define("Rule_Reference_variable", 313);
define("Rule_Reference_variable_2_Lbrace_Rbrace", 314);
define("Rule_Reference_variable_2", 315);
define("Rule_Offsets_Lbracket_Rbracket", 316);
define("Rule_Offsets", 317);
define("Rule_Compound_variable_T_variable", 318);
define("Rule_Compound_variable_Dollar_Lbrace_Rbrace", 319);
define("Rule_Dim_offset", 320);
define("Rule_Dim_offset2", 321);
define("Rule_Object_property", 322);
define("Rule_Object_property2", 323);
define("Rule_Object_dim_list_Lbracket_Rbracket", 324);
define("Rule_Object_dim_list", 325);
define("Rule_Object_dim_list_2_Lbrace_Rbrace", 326);
define("Rule_Object_dim_list_2", 327);
define("Rule_Variable_name_T_string", 328);
define("Rule_Variable_name_Lbrace_Rbrace", 329);
define("Rule_Simple_indirect_reference_Dollar", 330);
define("Rule_Simple_indirect_reference_Dollar2", 331);
define("Rule_Assignment_list_Comma", 332);
define("Rule_Assignment_list", 333);
define("Rule_Assignment_list_2", 334);
define("Rule_Assignment_list_element", 335);
define("Rule_Assignment_list_element_T_list_Lparan_Rparan", 336);
define("Rule_Assignment_list_element2", 337);
define("Rule_Array_pair_list", 338);
define("Rule_Array_pair_list2", 339);
define("Rule_Non_empty_array_pair_list_Comma_T_double_arrow", 340);
define("Rule_Non_empty_array_pair_list_Comma", 341);
define("Rule_Non_empty_array_pair_list", 342);
define("Rule_Non_empty_array_pair_list_2_Comma_T_double_arrow", 343);
define("Rule_Non_empty_array_pair_list_2_Comma", 344);
define("Rule_Non_empty_array_pair_list_2", 345);
define("Rule_Non_empty_array_pair_list_3_T_double_arrow", 346);
define("Rule_Non_empty_array_pair_list_3", 347);
define("Rule_Encaps_list", 348);
define("Rule_Encaps_list_T_encapsed_and_whitespace", 349);
define("Rule_Encaps_list2", 350);
define("Rule_Encaps_var_T_variable", 351);
define("Rule_Encaps_var_T_variable_Lbracket_Rbracket", 352);
define("Rule_Encaps_var_T_variable_T_object_operator_T_string", 353);
define("Rule_Encaps_var_T_dollar_open_curly_braces_Rbrace", 354);
define("Rule_Encaps_var_T_dollar_open_curly_braces_T_string_varname_Lbracket_Rbracket_Rbrace", 355);
define("Rule_Encaps_var_T_curly_open_Rbrace", 356);
define("Rule_Encaps_var_offset_T_string", 357);
define("Rule_Encaps_var_offset_T_num_string", 358);
define("Rule_Encaps_var_offset_T_variable", 359);
define("Rule_Internal_functions_in_yacc_T_isset_Lparan_Rparan", 360);
define("Rule_Internal_functions_in_yacc_T_empty_Lparan_Rparan", 361);
define("Rule_Internal_functions_in_yacc_T_include", 362);
define("Rule_Internal_functions_in_yacc_T_include_once", 363);
define("Rule_Internal_functions_in_yacc_T_eval_Lparan_Rparan", 364);
define("Rule_Internal_functions_in_yacc_T_require", 365);
define("Rule_Internal_functions_in_yacc_T_require_once", 366);
define("Rule_Isset_variables_Comma", 367);
define("Rule_Isset_variables", 368);
define("Rule_Isset_variables_2", 369);
define("Rule_Class_constant_T_paamayim_nekudotayim_T_string", 370);
?>
